/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ec.com.donbosquito.vista.moduloPersona;

import edu.ec.com.donbosquito.controlador.moduloPersona.ControladorRepresentante;
import edu.ec.com.donbosquito.modelo.moduloPersona.Docente;
import edu.ec.com.donbosquito.modelo.moduloPersona.Estudiante;
import edu.ec.com.donbosquito.modelo.moduloPersona.Persona;
import edu.ec.com.donbosquito.modelo.moduloPersona.Representante;
import static edu.ec.com.donbosquito.vista.principal.Escritorio.escritorioJdp;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author fernandosanchez
 */
public class MenuRepresentante extends javax.swing.JInternalFrame {

    ControladorRepresentante controladorRepresentante;
    String aux = null;

    /**
     * Creates new form MenuRepresentante
     */
    public MenuRepresentante(ControladorRepresentante controladorRepresentante) {
        initComponents();
        //validarCamposCrearRepresentante();
        this.controladorRepresentante = controladorRepresentante;
        tablaRegistrosJtbl.getColumnModel().getColumn(0).setPreferredWidth(45);
        tablaRegistrosJtbl.getColumnModel().getColumn(4).setPreferredWidth(45);
        tablaRegistrosJtbl.getTableHeader().setBackground(new Color (31,92,150));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtpRepresentante = new javax.swing.JTabbedPane();
        jPanelCrearRepresentante = new javax.swing.JPanel();
        jlCedulaRepresentante = new javax.swing.JLabel();
        jlNombreRepresentante = new javax.swing.JLabel();
        txtCedulaRepresentante = new javax.swing.JTextField();
        txtNombreRepresentante = new javax.swing.JTextField();
        jLApellidosRepresentante = new javax.swing.JLabel();
        txtApellidosRepresentante = new javax.swing.JTextField();
        jlDireccionRepresentante = new javax.swing.JLabel();
        txtDireccionRepresentante = new javax.swing.JTextField();
        jlTelefonoRepresentante = new javax.swing.JLabel();
        txtTelefonoRepresentante = new javax.swing.JTextField();
        jlCorreoRepresentante = new javax.swing.JLabel();
        txtCorreoRepresentante = new javax.swing.JTextField();
        jlParentescoFamiliar = new javax.swing.JLabel();
        txtParentescoFamiliar = new javax.swing.JTextField();
        jlvalidarCedulaRepresentante = new javax.swing.JLabel();
        jlvalidarNombreRepresentante = new javax.swing.JLabel();
        jlvalidarApellidoRepresentante = new javax.swing.JLabel();
        jlvalidarDireccionRepresentante = new javax.swing.JLabel();
        jlvalidarTelefonoRepresentante = new javax.swing.JLabel();
        jlvalidarCorreoRepresentante = new javax.swing.JLabel();
        jlvalidarParentescoRepresentante = new javax.swing.JLabel();
        jbGuardarRepresentante = new javax.swing.JLabel();
        jbLimpiarRepresentante = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanelEliminarDocente = new javax.swing.JPanel();
        jbBuscarModificarRepresentante = new javax.swing.JLabel();
        jlCedulaModificarRepresentante = new javax.swing.JLabel();
        jlNombreModificarRepresentante = new javax.swing.JLabel();
        txtCedulaModificarRepresentante = new javax.swing.JTextField();
        txtNombreModificarRepresentante = new javax.swing.JTextField();
        jLApellidosModificarRepresentante = new javax.swing.JLabel();
        txtApellidosModificarRepresentante = new javax.swing.JTextField();
        jlDireccionModificarRepresentante = new javax.swing.JLabel();
        txtDireccionModificarRepresentante = new javax.swing.JTextField();
        jlTelefonoModificarRepresentante = new javax.swing.JLabel();
        txtTelefonoModificarRepresentante = new javax.swing.JTextField();
        jlCorreoModificarRepresentante = new javax.swing.JLabel();
        txtCorreoModificarRepresentante = new javax.swing.JTextField();
        jlParentescoModificarRepresentante = new javax.swing.JLabel();
        txtParentescoModificarRepresentante = new javax.swing.JTextField();
        jlBuscarModificarRepresentante = new javax.swing.JLabel();
        txtBuscarModificarRepresentante = new javax.swing.JTextField();
        jlvalidarCedulaRepresentante1 = new javax.swing.JLabel();
        jlvalidarNombreRepresentante1 = new javax.swing.JLabel();
        jlvalidarApellidoRepresentante1 = new javax.swing.JLabel();
        jlvalidarDireccionRepresentante1 = new javax.swing.JLabel();
        jlvalidarTelefonoRepresentante1 = new javax.swing.JLabel();
        jlvalidarCorreoRepresentante1 = new javax.swing.JLabel();
        jlvalidarParentescoRepresentante1 = new javax.swing.JLabel();
        jbModificarRepresentante = new javax.swing.JLabel();
        jbEliminarRepresentante = new javax.swing.JLabel();
        jbLimpiarModificarRepresentante = new javax.swing.JLabel();
        jlPersona = new javax.swing.JLabel();
        jPanelListarRepresentante = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaRegistrosJtbl = new javax.swing.JTable();
        jbListar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(31, 92, 150));
        setBorder(null);
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Representante");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jtpRepresentante.setBackground(new java.awt.Color(31, 92, 150));

        jPanelCrearRepresentante.setBackground(new java.awt.Color(239, 239, 239));
        jPanelCrearRepresentante.setLayout(null);

        jlCedulaRepresentante.setForeground(new java.awt.Color(25, 137, 196));
        jlCedulaRepresentante.setText("Cédula:");
        jPanelCrearRepresentante.add(jlCedulaRepresentante);
        jlCedulaRepresentante.setBounds(17, 84, 47, 16);

        jlNombreRepresentante.setForeground(new java.awt.Color(25, 137, 196));
        jlNombreRepresentante.setText("Nombre:");
        jPanelCrearRepresentante.add(jlNombreRepresentante);
        jlNombreRepresentante.setBounds(17, 126, 54, 16);

        txtCedulaRepresentante.setBackground(new java.awt.Color(153, 153, 153));
        txtCedulaRepresentante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaRepresentanteKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCedulaRepresentanteKeyReleased(evt);
            }
        });
        jPanelCrearRepresentante.add(txtCedulaRepresentante);
        txtCedulaRepresentante.setBounds(161, 80, 210, 24);

        txtNombreRepresentante.setBackground(new java.awt.Color(153, 153, 153));
        txtNombreRepresentante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreRepresentanteActionPerformed(evt);
            }
        });
        txtNombreRepresentante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreRepresentanteKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreRepresentanteKeyReleased(evt);
            }
        });
        jPanelCrearRepresentante.add(txtNombreRepresentante);
        txtNombreRepresentante.setBounds(161, 122, 210, 24);

        jLApellidosRepresentante.setBackground(new java.awt.Color(204, 204, 204));
        jLApellidosRepresentante.setForeground(new java.awt.Color(25, 137, 196));
        jLApellidosRepresentante.setText("Apellidos:");
        jPanelCrearRepresentante.add(jLApellidosRepresentante);
        jLApellidosRepresentante.setBounds(17, 168, 63, 16);

        txtApellidosRepresentante.setBackground(new java.awt.Color(153, 153, 153));
        txtApellidosRepresentante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidosRepresentanteKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApellidosRepresentanteKeyReleased(evt);
            }
        });
        jPanelCrearRepresentante.add(txtApellidosRepresentante);
        txtApellidosRepresentante.setBounds(161, 164, 210, 24);

        jlDireccionRepresentante.setForeground(new java.awt.Color(25, 137, 196));
        jlDireccionRepresentante.setText("Dirección:");
        jPanelCrearRepresentante.add(jlDireccionRepresentante);
        jlDireccionRepresentante.setBounds(16, 210, 64, 16);

        txtDireccionRepresentante.setBackground(new java.awt.Color(153, 153, 153));
        txtDireccionRepresentante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDireccionRepresentanteKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDireccionRepresentanteKeyReleased(evt);
            }
        });
        jPanelCrearRepresentante.add(txtDireccionRepresentante);
        txtDireccionRepresentante.setBounds(161, 206, 210, 24);

        jlTelefonoRepresentante.setForeground(new java.awt.Color(25, 137, 196));
        jlTelefonoRepresentante.setText("Teléfono:");
        jPanelCrearRepresentante.add(jlTelefonoRepresentante);
        jlTelefonoRepresentante.setBounds(16, 252, 59, 16);

        txtTelefonoRepresentante.setBackground(new java.awt.Color(153, 153, 153));
        txtTelefonoRepresentante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoRepresentanteKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefonoRepresentanteKeyReleased(evt);
            }
        });
        jPanelCrearRepresentante.add(txtTelefonoRepresentante);
        txtTelefonoRepresentante.setBounds(161, 248, 210, 24);

        jlCorreoRepresentante.setForeground(new java.awt.Color(25, 137, 196));
        jlCorreoRepresentante.setText("Correo:");
        jPanelCrearRepresentante.add(jlCorreoRepresentante);
        jlCorreoRepresentante.setBounds(16, 294, 46, 16);

        txtCorreoRepresentante.setBackground(new java.awt.Color(153, 153, 153));
        txtCorreoRepresentante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCorreoRepresentanteKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCorreoRepresentanteKeyReleased(evt);
            }
        });
        jPanelCrearRepresentante.add(txtCorreoRepresentante);
        txtCorreoRepresentante.setBounds(161, 290, 210, 24);

        jlParentescoFamiliar.setForeground(new java.awt.Color(25, 137, 196));
        jlParentescoFamiliar.setText("Parentesco Familiar:");
        jPanelCrearRepresentante.add(jlParentescoFamiliar);
        jlParentescoFamiliar.setBounds(16, 336, 126, 16);

        txtParentescoFamiliar.setBackground(new java.awt.Color(153, 153, 153));
        txtParentescoFamiliar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtParentescoFamiliarKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtParentescoFamiliarKeyReleased(evt);
            }
        });
        jPanelCrearRepresentante.add(txtParentescoFamiliar);
        txtParentescoFamiliar.setBounds(161, 332, 210, 24);

        jlvalidarCedulaRepresentante.setForeground(new java.awt.Color(52, 113, 161));
        jPanelCrearRepresentante.add(jlvalidarCedulaRepresentante);
        jlvalidarCedulaRepresentante.setBounds(377, 80, 106, 24);

        jlvalidarNombreRepresentante.setForeground(new java.awt.Color(52, 113, 161));
        jPanelCrearRepresentante.add(jlvalidarNombreRepresentante);
        jlvalidarNombreRepresentante.setBounds(377, 122, 100, 24);

        jlvalidarApellidoRepresentante.setForeground(new java.awt.Color(52, 113, 161));
        jPanelCrearRepresentante.add(jlvalidarApellidoRepresentante);
        jlvalidarApellidoRepresentante.setBounds(377, 164, 106, 24);

        jlvalidarDireccionRepresentante.setForeground(new java.awt.Color(52, 113, 161));
        jPanelCrearRepresentante.add(jlvalidarDireccionRepresentante);
        jlvalidarDireccionRepresentante.setBounds(377, 206, 106, 24);

        jlvalidarTelefonoRepresentante.setForeground(new java.awt.Color(52, 113, 161));
        jPanelCrearRepresentante.add(jlvalidarTelefonoRepresentante);
        jlvalidarTelefonoRepresentante.setBounds(377, 248, 106, 24);

        jlvalidarCorreoRepresentante.setForeground(new java.awt.Color(52, 113, 161));
        jPanelCrearRepresentante.add(jlvalidarCorreoRepresentante);
        jlvalidarCorreoRepresentante.setBounds(377, 290, 106, 24);

        jlvalidarParentescoRepresentante.setForeground(new java.awt.Color(52, 113, 161));
        jPanelCrearRepresentante.add(jlvalidarParentescoRepresentante);
        jlvalidarParentescoRepresentante.setBounds(377, 332, 106, 24);

        jbGuardarRepresentante.setIcon(new javax.swing.ImageIcon("/Users/fernandosanchez/Universidad Politecnica Salesiana/Est. Jose Miguel Pandiguana Suqui - Ingeniería Grupo 6/UnidadEducativaDonBosquito/Icon/icons8-save.png")); // NOI18N
        jbGuardarRepresentante.setPreferredSize(new java.awt.Dimension(50, 50));
        jbGuardarRepresentante.setSize(new java.awt.Dimension(50, 50));
        jbGuardarRepresentante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbGuardarRepresentanteMousePressed(evt);
            }
        });
        jPanelCrearRepresentante.add(jbGuardarRepresentante);
        jbGuardarRepresentante.setBounds(161, 396, 50, 50);

        jbLimpiarRepresentante.setIcon(new javax.swing.ImageIcon("/Users/fernandosanchez/Universidad Politecnica Salesiana/Est. Jose Miguel Pandiguana Suqui - Ingeniería Grupo 6/UnidadEducativaDonBosquito/Icon/icons8-cancel.png")); // NOI18N
        jbLimpiarRepresentante.setPreferredSize(new java.awt.Dimension(50, 50));
        jbLimpiarRepresentante.setSize(new java.awt.Dimension(50, 50));
        jbLimpiarRepresentante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbLimpiarRepresentanteMousePressed(evt);
            }
        });
        jPanelCrearRepresentante.add(jbLimpiarRepresentante);
        jbLimpiarRepresentante.setBounds(321, 396, 50, 50);

        jLabel3.setIcon(new javax.swing.ImageIcon("/Users/fernandosanchez/Universidad Politecnica Salesiana/Est. Jose Miguel Pandiguana Suqui - Ingeniería Grupo 6/UnidadEducativaDonBosquito/Icon/representante.png")); // NOI18N
        jPanelCrearRepresentante.add(jLabel3);
        jLabel3.setBounds(500, 22, 395, 510);

        jtpRepresentante.addTab("Crear", jPanelCrearRepresentante);

        jPanelEliminarDocente.setBackground(new java.awt.Color(239, 239, 239));
        jPanelEliminarDocente.setLayout(null);

        jbBuscarModificarRepresentante.setIcon(new javax.swing.ImageIcon("/Users/fernandosanchez/Universidad Politecnica Salesiana/Est. Jose Miguel Pandiguana Suqui - Ingeniería Grupo 6/UnidadEducativaDonBosquito/Icon/icons8-window_search.png")); // NOI18N
        jbBuscarModificarRepresentante.setPreferredSize(new java.awt.Dimension(50, 50));
        jbBuscarModificarRepresentante.setSize(new java.awt.Dimension(50, 50));
        jbBuscarModificarRepresentante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbBuscarModificarRepresentanteMousePressed(evt);
            }
        });
        jPanelEliminarDocente.add(jbBuscarModificarRepresentante);
        jbBuscarModificarRepresentante.setBounds(380, 50, 45, 50);

        jlCedulaModificarRepresentante.setForeground(new java.awt.Color(25, 137, 196));
        jlCedulaModificarRepresentante.setText("Cédula:");
        jPanelEliminarDocente.add(jlCedulaModificarRepresentante);
        jlCedulaModificarRepresentante.setBounds(20, 110, 47, 16);

        jlNombreModificarRepresentante.setForeground(new java.awt.Color(25, 137, 196));
        jlNombreModificarRepresentante.setText("Nombre:");
        jPanelEliminarDocente.add(jlNombreModificarRepresentante);
        jlNombreModificarRepresentante.setBounds(20, 140, 54, 16);

        txtCedulaModificarRepresentante.setBackground(new java.awt.Color(153, 153, 153));
        txtCedulaModificarRepresentante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCedulaModificarRepresentanteKeyReleased(evt);
            }
        });
        jPanelEliminarDocente.add(txtCedulaModificarRepresentante);
        txtCedulaModificarRepresentante.setBounds(150, 100, 210, 24);

        txtNombreModificarRepresentante.setBackground(new java.awt.Color(153, 153, 153));
        txtNombreModificarRepresentante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreModificarRepresentanteKeyReleased(evt);
            }
        });
        jPanelEliminarDocente.add(txtNombreModificarRepresentante);
        txtNombreModificarRepresentante.setBounds(150, 140, 210, 24);

        jLApellidosModificarRepresentante.setBackground(new java.awt.Color(204, 204, 204));
        jLApellidosModificarRepresentante.setForeground(new java.awt.Color(25, 137, 196));
        jLApellidosModificarRepresentante.setText("Apellidos:");
        jPanelEliminarDocente.add(jLApellidosModificarRepresentante);
        jLApellidosModificarRepresentante.setBounds(20, 180, 63, 16);

        txtApellidosModificarRepresentante.setBackground(new java.awt.Color(153, 153, 153));
        txtApellidosModificarRepresentante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApellidosModificarRepresentanteKeyReleased(evt);
            }
        });
        jPanelEliminarDocente.add(txtApellidosModificarRepresentante);
        txtApellidosModificarRepresentante.setBounds(150, 180, 210, 24);

        jlDireccionModificarRepresentante.setForeground(new java.awt.Color(25, 137, 196));
        jlDireccionModificarRepresentante.setText("Dirección:");
        jPanelEliminarDocente.add(jlDireccionModificarRepresentante);
        jlDireccionModificarRepresentante.setBounds(20, 220, 64, 16);

        txtDireccionModificarRepresentante.setBackground(new java.awt.Color(153, 153, 153));
        txtDireccionModificarRepresentante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDireccionModificarRepresentanteKeyReleased(evt);
            }
        });
        jPanelEliminarDocente.add(txtDireccionModificarRepresentante);
        txtDireccionModificarRepresentante.setBounds(150, 220, 210, 24);

        jlTelefonoModificarRepresentante.setForeground(new java.awt.Color(25, 137, 196));
        jlTelefonoModificarRepresentante.setText("Teléfono:");
        jPanelEliminarDocente.add(jlTelefonoModificarRepresentante);
        jlTelefonoModificarRepresentante.setBounds(20, 260, 59, 16);

        txtTelefonoModificarRepresentante.setBackground(new java.awt.Color(153, 153, 153));
        txtTelefonoModificarRepresentante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefonoModificarRepresentanteKeyReleased(evt);
            }
        });
        jPanelEliminarDocente.add(txtTelefonoModificarRepresentante);
        txtTelefonoModificarRepresentante.setBounds(150, 260, 210, 24);

        jlCorreoModificarRepresentante.setForeground(new java.awt.Color(25, 137, 196));
        jlCorreoModificarRepresentante.setText("Correo:");
        jPanelEliminarDocente.add(jlCorreoModificarRepresentante);
        jlCorreoModificarRepresentante.setBounds(20, 300, 46, 16);

        txtCorreoModificarRepresentante.setBackground(new java.awt.Color(153, 153, 153));
        txtCorreoModificarRepresentante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCorreoModificarRepresentanteKeyReleased(evt);
            }
        });
        jPanelEliminarDocente.add(txtCorreoModificarRepresentante);
        txtCorreoModificarRepresentante.setBounds(150, 300, 210, 24);

        jlParentescoModificarRepresentante.setForeground(new java.awt.Color(25, 137, 196));
        jlParentescoModificarRepresentante.setText("Parentesco Familiar:");
        jPanelEliminarDocente.add(jlParentescoModificarRepresentante);
        jlParentescoModificarRepresentante.setBounds(20, 340, 126, 16);

        txtParentescoModificarRepresentante.setBackground(new java.awt.Color(153, 153, 153));
        txtParentescoModificarRepresentante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtParentescoModificarRepresentanteKeyReleased(evt);
            }
        });
        jPanelEliminarDocente.add(txtParentescoModificarRepresentante);
        txtParentescoModificarRepresentante.setBounds(150, 340, 210, 24);

        jlBuscarModificarRepresentante.setForeground(new java.awt.Color(25, 137, 196));
        jlBuscarModificarRepresentante.setText("Ingresar Cédula:");
        jPanelEliminarDocente.add(jlBuscarModificarRepresentante);
        jlBuscarModificarRepresentante.setBounds(20, 60, 102, 16);

        txtBuscarModificarRepresentante.setBackground(new java.awt.Color(153, 153, 153));
        jPanelEliminarDocente.add(txtBuscarModificarRepresentante);
        txtBuscarModificarRepresentante.setBounds(150, 60, 210, 24);

        jlvalidarCedulaRepresentante1.setForeground(new java.awt.Color(52, 113, 161));
        jPanelEliminarDocente.add(jlvalidarCedulaRepresentante1);
        jlvalidarCedulaRepresentante1.setBounds(370, 90, 100, 24);

        jlvalidarNombreRepresentante1.setForeground(new java.awt.Color(52, 113, 161));
        jPanelEliminarDocente.add(jlvalidarNombreRepresentante1);
        jlvalidarNombreRepresentante1.setBounds(370, 130, 100, 24);

        jlvalidarApellidoRepresentante1.setForeground(new java.awt.Color(52, 113, 161));
        jPanelEliminarDocente.add(jlvalidarApellidoRepresentante1);
        jlvalidarApellidoRepresentante1.setBounds(370, 170, 100, 24);

        jlvalidarDireccionRepresentante1.setForeground(new java.awt.Color(52, 113, 161));
        jPanelEliminarDocente.add(jlvalidarDireccionRepresentante1);
        jlvalidarDireccionRepresentante1.setBounds(370, 210, 100, 24);

        jlvalidarTelefonoRepresentante1.setForeground(new java.awt.Color(52, 113, 161));
        jPanelEliminarDocente.add(jlvalidarTelefonoRepresentante1);
        jlvalidarTelefonoRepresentante1.setBounds(370, 250, 100, 24);

        jlvalidarCorreoRepresentante1.setForeground(new java.awt.Color(52, 113, 161));
        jPanelEliminarDocente.add(jlvalidarCorreoRepresentante1);
        jlvalidarCorreoRepresentante1.setBounds(370, 300, 100, 24);

        jlvalidarParentescoRepresentante1.setForeground(new java.awt.Color(52, 113, 161));
        jPanelEliminarDocente.add(jlvalidarParentescoRepresentante1);
        jlvalidarParentescoRepresentante1.setBounds(370, 340, 100, 24);

        jbModificarRepresentante.setIcon(new javax.swing.ImageIcon("/Users/fernandosanchez/Universidad Politecnica Salesiana/Est. Jose Miguel Pandiguana Suqui - Ingeniería Grupo 6/UnidadEducativaDonBosquito/Icon/icons8-edit_property.png")); // NOI18N
        jbModificarRepresentante.setPreferredSize(new java.awt.Dimension(50, 50));
        jbModificarRepresentante.setSize(new java.awt.Dimension(50, 50));
        jbModificarRepresentante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbModificarRepresentanteMousePressed(evt);
            }
        });
        jPanelEliminarDocente.add(jbModificarRepresentante);
        jbModificarRepresentante.setBounds(80, 410, 50, 50);

        jbEliminarRepresentante.setIcon(new javax.swing.ImageIcon("/Users/fernandosanchez/Universidad Politecnica Salesiana/Est. Jose Miguel Pandiguana Suqui - Ingeniería Grupo 6/UnidadEducativaDonBosquito/Icon/icons8-delete_view.png")); // NOI18N
        jbEliminarRepresentante.setToolTipText("");
        jbEliminarRepresentante.setSize(new java.awt.Dimension(50, 50));
        jbEliminarRepresentante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbEliminarRepresentanteMousePressed(evt);
            }
        });
        jPanelEliminarDocente.add(jbEliminarRepresentante);
        jbEliminarRepresentante.setBounds(190, 410, 50, 50);

        jbLimpiarModificarRepresentante.setIcon(new javax.swing.ImageIcon("/Users/fernandosanchez/Universidad Politecnica Salesiana/Est. Jose Miguel Pandiguana Suqui - Ingeniería Grupo 6/UnidadEducativaDonBosquito/Icon/icons8-cancel.png")); // NOI18N
        jbLimpiarModificarRepresentante.setPreferredSize(new java.awt.Dimension(50, 50));
        jbLimpiarModificarRepresentante.setSize(new java.awt.Dimension(50, 50));
        jbLimpiarModificarRepresentante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbLimpiarModificarRepresentanteMousePressed(evt);
            }
        });
        jPanelEliminarDocente.add(jbLimpiarModificarRepresentante);
        jbLimpiarModificarRepresentante.setBounds(300, 410, 50, 50);

        jlPersona.setIcon(new javax.swing.ImageIcon("/Users/fernandosanchez/Universidad Politecnica Salesiana/Est. Jose Miguel Pandiguana Suqui - Ingeniería Grupo 6/UnidadEducativaDonBosquito/Icon/representante.png")); // NOI18N
        jPanelEliminarDocente.add(jlPersona);
        jlPersona.setBounds(500, 22, 395, 510);

        jtpRepresentante.addTab("Modificar/Eliminar", jPanelEliminarDocente);

        jPanelListarRepresentante.setBackground(new java.awt.Color(239, 239, 239));

        tablaRegistrosJtbl.setAutoCreateRowSorter(true);
        tablaRegistrosJtbl.setBackground(new java.awt.Color(239, 239, 239));
        tablaRegistrosJtbl.setForeground(new java.awt.Color(25, 137, 196));
        tablaRegistrosJtbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Cédula", "Nombres", "Apellidos", "Dirección", "Teléfono", "Correo", "Parentesco Familiar"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaRegistrosJtbl.setGridColor(new java.awt.Color(31, 92, 150));
        tablaRegistrosJtbl.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tablaRegistrosJtbl.setSelectionForeground(new java.awt.Color(153, 153, 153));
        jScrollPane1.setViewportView(tablaRegistrosJtbl);

        jbListar.setBackground(new java.awt.Color(239, 239, 239));
        jbListar.setForeground(new java.awt.Color(204, 204, 204));
        jbListar.setBorder(null);
        jbListar.setSize(new java.awt.Dimension(80, 66));
        jbListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbListarActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/fernandosanchez/Universidad Politecnica Salesiana/Est. Jose Miguel Pandiguana Suqui - Ingeniería Grupo 6/UnidadEducativaDonBosquito/Icon/icons8-list.png")); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanelListarRepresentanteLayout = new javax.swing.GroupLayout(jPanelListarRepresentante);
        jPanelListarRepresentante.setLayout(jPanelListarRepresentanteLayout);
        jPanelListarRepresentanteLayout.setHorizontalGroup(
            jPanelListarRepresentanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelListarRepresentanteLayout.createSequentialGroup()
                .addGroup(jPanelListarRepresentanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelListarRepresentanteLayout.createSequentialGroup()
                        .addGap(377, 377, 377)
                        .addComponent(jbListar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(jLabel1))
                    .addGroup(jPanelListarRepresentanteLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 863, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 28, Short.MAX_VALUE))
        );
        jPanelListarRepresentanteLayout.setVerticalGroup(
            jPanelListarRepresentanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelListarRepresentanteLayout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelListarRepresentanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbListar, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        jtpRepresentante.addTab("Listar", jPanelListarRepresentante);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtpRepresentante)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtpRepresentante)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbListarActionPerformed
        // TODO add your handling code here:
        listarRepresentante();
    }//GEN-LAST:event_jbListarActionPerformed

    private void txtParentescoModificarRepresentanteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtParentescoModificarRepresentanteKeyReleased
        // TODO add your handling code here:
        validarCamposModificarrRepresentante();
    }//GEN-LAST:event_txtParentescoModificarRepresentanteKeyReleased

    private void txtCedulaModificarRepresentanteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaModificarRepresentanteKeyReleased
        // TODO add your handling code here:
        validarCamposModificarrRepresentante();
    }//GEN-LAST:event_txtCedulaModificarRepresentanteKeyReleased

    private void txtNombreModificarRepresentanteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreModificarRepresentanteKeyReleased
        // TODO add your handling code here:
        validarCamposModificarrRepresentante();
    }//GEN-LAST:event_txtNombreModificarRepresentanteKeyReleased

    private void txtApellidosModificarRepresentanteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosModificarRepresentanteKeyReleased
        // TODO add your handling code here:
        validarCamposModificarrRepresentante();
    }//GEN-LAST:event_txtApellidosModificarRepresentanteKeyReleased

    private void txtDireccionModificarRepresentanteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionModificarRepresentanteKeyReleased
        // TODO add your handling code here:
        validarCamposModificarrRepresentante();
    }//GEN-LAST:event_txtDireccionModificarRepresentanteKeyReleased

    private void txtTelefonoModificarRepresentanteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoModificarRepresentanteKeyReleased
        // TODO add your handling code here:
        validarCamposModificarrRepresentante();
    }//GEN-LAST:event_txtTelefonoModificarRepresentanteKeyReleased

    private void txtCorreoModificarRepresentanteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoModificarRepresentanteKeyReleased
        // TODO add your handling code here:
        validarCamposModificarrRepresentante();
    }//GEN-LAST:event_txtCorreoModificarRepresentanteKeyReleased

    private void txtCedulaRepresentanteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaRepresentanteKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar) || txtCedulaRepresentante.getText().length() >= 10) {
            getToolkit().beep();
            evt.consume();

            if (txtCedulaRepresentante.getText().length() >= 10) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();
            } else {
                JOptionPane.showMessageDialog(jlParentescoFamiliar, "Ingresar solo Números");
            }
        }
    }//GEN-LAST:event_txtCedulaRepresentanteKeyTyped

    private void txtCedulaRepresentanteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaRepresentanteKeyReleased
        // TODO add your handling code here:
        validarCamposCrearRepresentante();
    }//GEN-LAST:event_txtCedulaRepresentanteKeyReleased

    private void txtNombreRepresentanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreRepresentanteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreRepresentanteActionPerformed

    private void txtNombreRepresentanteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreRepresentanteKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isDigit(validar)) {
            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(jlParentescoFamiliar, "Ingresar solo Letras");
        }
    }//GEN-LAST:event_txtNombreRepresentanteKeyTyped

    private void txtNombreRepresentanteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreRepresentanteKeyReleased
        // TODO add your handling code here:
        validarCamposCrearRepresentante();
    }//GEN-LAST:event_txtNombreRepresentanteKeyReleased

    private void txtApellidosRepresentanteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosRepresentanteKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isDigit(validar)) {
            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(jlParentescoFamiliar, "Ingresar solo Letras");
        }
    }//GEN-LAST:event_txtApellidosRepresentanteKeyTyped

    private void txtApellidosRepresentanteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosRepresentanteKeyReleased
        // TODO add your handling code here:
        validarCamposCrearRepresentante();
    }//GEN-LAST:event_txtApellidosRepresentanteKeyReleased

    private void txtDireccionRepresentanteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionRepresentanteKeyTyped
        // TODO add your handling code here:
        if ( ((evt.getKeyChar() >= 33 && evt.getKeyChar() <=43 )|| ((evt.getKeyChar() ==47 ))
            ||  ((evt.getKeyChar() >= 58 && evt.getKeyChar() <=64 )) || ((evt.getKeyChar() >= 91 && evt.getKeyChar() <=96 ))
            ||  ((evt.getKeyChar() >= 123 && evt.getKeyChar() <=402 )))
        && evt.getKeyChar() != 209 && evt.getKeyChar() != 241
        && evt.getKeyChar() != 8) {
        evt.consume();
        JOptionPane.showMessageDialog(jlParentescoFamiliar, "No se permite este caracter: "+evt.getKeyChar());
        }
    }//GEN-LAST:event_txtDireccionRepresentanteKeyTyped

    private void txtDireccionRepresentanteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionRepresentanteKeyReleased
        // TODO add your handling code here:
        validarCamposCrearRepresentante();
    }//GEN-LAST:event_txtDireccionRepresentanteKeyReleased

    private void txtTelefonoRepresentanteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoRepresentanteKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar) || txtTelefonoRepresentante.getText().length() >= 10) {
            getToolkit().beep();
            evt.consume();

            if (txtTelefonoRepresentante.getText().length() >= 10) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();
            } else {
                JOptionPane.showMessageDialog(jlParentescoFamiliar, "Ingresar solo Números");
            }
        }
    }//GEN-LAST:event_txtTelefonoRepresentanteKeyTyped

    private void txtTelefonoRepresentanteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoRepresentanteKeyReleased
        // TODO add your handling code here:
        validarCamposCrearRepresentante();
    }//GEN-LAST:event_txtTelefonoRepresentanteKeyReleased

    private void txtCorreoRepresentanteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoRepresentanteKeyTyped
        // TODO add your handling code here:
        if ( ((evt.getKeyChar() >= 32 && evt.getKeyChar() <=44 ) || (evt.getKeyChar() ==47)
            ||  ((evt.getKeyChar() >= 58 && evt.getKeyChar() <=63 )) || ((evt.getKeyChar() >= 91 && evt.getKeyChar() <=94 ))
            ||  ((evt.getKeyChar() >= 123 && evt.getKeyChar() <=402 )))
        && evt.getKeyChar() != 8 && evt.getKeyChar() != 209 && evt.getKeyChar() != 241) {
        evt.consume();
        JOptionPane.showMessageDialog(jlParentescoFamiliar, "No se permite este caracter: "+evt.getKeyChar());
        }

    }//GEN-LAST:event_txtCorreoRepresentanteKeyTyped

    private void txtCorreoRepresentanteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoRepresentanteKeyReleased
        // TODO add your handling code here:
        validarCamposCrearRepresentante();
    }//GEN-LAST:event_txtCorreoRepresentanteKeyReleased

    private void txtParentescoFamiliarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtParentescoFamiliarKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isDigit(validar)) {
            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(jlParentescoFamiliar, "Ingresar solo Letras");
        }

    }//GEN-LAST:event_txtParentescoFamiliarKeyTyped

    private void txtParentescoFamiliarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtParentescoFamiliarKeyReleased
        // TODO add your handling code here:
        validarCamposCrearRepresentante();
    }//GEN-LAST:event_txtParentescoFamiliarKeyReleased

    private void jbGuardarRepresentanteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbGuardarRepresentanteMousePressed
        // TODO add your handling code here:
        crearRepresentante();
        
    }//GEN-LAST:event_jbGuardarRepresentanteMousePressed

    private void jbLimpiarRepresentanteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbLimpiarRepresentanteMousePressed
        // TODO add your handling code here:
        limpiarCrearRepresentante();
    }//GEN-LAST:event_jbLimpiarRepresentanteMousePressed

    private void jbBuscarModificarRepresentanteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbBuscarModificarRepresentanteMousePressed
        // TODO add your handling code here:
        buscarRepresentante();
    }//GEN-LAST:event_jbBuscarModificarRepresentanteMousePressed

    private void jbLimpiarModificarRepresentanteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbLimpiarModificarRepresentanteMousePressed
        // TODO add your handling code here:
        limpiarModificarEliminarRepresentante();
    }//GEN-LAST:event_jbLimpiarModificarRepresentanteMousePressed

    private void jbEliminarRepresentanteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbEliminarRepresentanteMousePressed
        // TODO add your handling code here:
        eliminarRepresentante();
    }//GEN-LAST:event_jbEliminarRepresentanteMousePressed

    private void jbModificarRepresentanteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbModificarRepresentanteMousePressed
        // TODO add your handling code here:
        modificarRepresentante();
    }//GEN-LAST:event_jbModificarRepresentanteMousePressed

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        // TODO add your handling code here:
        listarRepresentante();
    }//GEN-LAST:event_jLabel1MousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLApellidosModificarRepresentante;
    private javax.swing.JLabel jLApellidosRepresentante;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanelCrearRepresentante;
    private javax.swing.JPanel jPanelEliminarDocente;
    private javax.swing.JPanel jPanelListarRepresentante;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jbBuscarModificarRepresentante;
    private javax.swing.JLabel jbEliminarRepresentante;
    private javax.swing.JLabel jbGuardarRepresentante;
    private javax.swing.JLabel jbLimpiarModificarRepresentante;
    private javax.swing.JLabel jbLimpiarRepresentante;
    private javax.swing.JButton jbListar;
    private javax.swing.JLabel jbModificarRepresentante;
    private javax.swing.JLabel jlBuscarModificarRepresentante;
    private javax.swing.JLabel jlCedulaModificarRepresentante;
    private javax.swing.JLabel jlCedulaRepresentante;
    private javax.swing.JLabel jlCorreoModificarRepresentante;
    private javax.swing.JLabel jlCorreoRepresentante;
    private javax.swing.JLabel jlDireccionModificarRepresentante;
    private javax.swing.JLabel jlDireccionRepresentante;
    private javax.swing.JLabel jlNombreModificarRepresentante;
    private javax.swing.JLabel jlNombreRepresentante;
    private javax.swing.JLabel jlParentescoFamiliar;
    private javax.swing.JLabel jlParentescoModificarRepresentante;
    private javax.swing.JLabel jlPersona;
    private javax.swing.JLabel jlTelefonoModificarRepresentante;
    private javax.swing.JLabel jlTelefonoRepresentante;
    private javax.swing.JLabel jlvalidarApellidoRepresentante;
    private javax.swing.JLabel jlvalidarApellidoRepresentante1;
    private javax.swing.JLabel jlvalidarCedulaRepresentante;
    private javax.swing.JLabel jlvalidarCedulaRepresentante1;
    private javax.swing.JLabel jlvalidarCorreoRepresentante;
    private javax.swing.JLabel jlvalidarCorreoRepresentante1;
    private javax.swing.JLabel jlvalidarDireccionRepresentante;
    private javax.swing.JLabel jlvalidarDireccionRepresentante1;
    private javax.swing.JLabel jlvalidarNombreRepresentante;
    private javax.swing.JLabel jlvalidarNombreRepresentante1;
    private javax.swing.JLabel jlvalidarParentescoRepresentante;
    private javax.swing.JLabel jlvalidarParentescoRepresentante1;
    private javax.swing.JLabel jlvalidarTelefonoRepresentante;
    private javax.swing.JLabel jlvalidarTelefonoRepresentante1;
    private javax.swing.JTabbedPane jtpRepresentante;
    private javax.swing.JTable tablaRegistrosJtbl;
    private javax.swing.JTextField txtApellidosModificarRepresentante;
    private javax.swing.JTextField txtApellidosRepresentante;
    private javax.swing.JTextField txtBuscarModificarRepresentante;
    private javax.swing.JTextField txtCedulaModificarRepresentante;
    private javax.swing.JTextField txtCedulaRepresentante;
    private javax.swing.JTextField txtCorreoModificarRepresentante;
    private javax.swing.JTextField txtCorreoRepresentante;
    private javax.swing.JTextField txtDireccionModificarRepresentante;
    private javax.swing.JTextField txtDireccionRepresentante;
    private javax.swing.JTextField txtNombreModificarRepresentante;
    private javax.swing.JTextField txtNombreRepresentante;
    private javax.swing.JTextField txtParentescoFamiliar;
    private javax.swing.JTextField txtParentescoModificarRepresentante;
    private javax.swing.JTextField txtTelefonoModificarRepresentante;
    private javax.swing.JTextField txtTelefonoRepresentante;
    // End of variables declaration//GEN-END:variables

    public static Date ParseFecha(String fecha) {
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Date fechaDate = null;
        try {
            fechaDate = formato.parse(fecha);
        } catch (ParseException ex) {
            System.out.println(ex);
        }
        return fechaDate;
    }

    void limpiarCrearRepresentante() {
        txtCedulaRepresentante.setText("");
        txtNombreRepresentante.setText("");
        txtApellidosRepresentante.setText("");
        txtDireccionRepresentante.setText("");
        txtTelefonoRepresentante.setText("");
        txtCorreoRepresentante.setText("");
        txtParentescoFamiliar.setText("");
        validarCamposCrearRepresentante();
    }

    void validarCamposCrearRepresentante() {

        if (txtCedulaRepresentante.getText().isEmpty()) {
            jlvalidarCedulaRepresentante.setText("Ingresar Cédula");
        } else if (validadorDeCedula(txtCedulaRepresentante.getText()) == false) {
            jlvalidarCedulaRepresentante.setText("Cédula Incorrecta");
        } else {
            jlvalidarCedulaRepresentante.setText("");
        }

        if (txtNombreRepresentante.getText().isEmpty()) {
            jlvalidarNombreRepresentante.setText("Ingresar Nombres");
        } else if (validarNombre(txtNombreRepresentante.getText()) == false) {
            jlvalidarNombreRepresentante.setText("Nombre Incorrecto");
        } else {
            jlvalidarNombreRepresentante.setText("");
        }

        if (txtApellidosRepresentante.getText().isEmpty()) {
            jlvalidarApellidoRepresentante.setText("Ingresar Apellido");
        } else if (validarNombre(txtApellidosRepresentante.getText()) == false) {
            jlvalidarApellidoRepresentante.setText("Apellido Incorrecto");
        } else {
            jlvalidarApellidoRepresentante.setText("");
        }

        if (txtDireccionRepresentante.getText().isEmpty()) {
            jlvalidarDireccionRepresentante.setText("Ingresar Dirección");
        } else {
            jlvalidarDireccionRepresentante.setText("");
        }

        if (txtTelefonoRepresentante.getText().isEmpty()) {
            jlvalidarTelefonoRepresentante.setText("Ingresar Teléfono");
        } else {
            jlvalidarTelefonoRepresentante.setText("");
        }

        if (txtCorreoRepresentante.getText().isEmpty()) {
            jlvalidarCorreoRepresentante.setText("Ingresar Correo");

        } else if (validarCorreo(txtCorreoRepresentante.getText()) == false) {
            jlvalidarCorreoRepresentante.setText("Correo invalido");
        } else {
            jlvalidarCorreoRepresentante.setText("");
        }

        if (txtParentescoFamiliar.getText().isEmpty()) {
            jlvalidarParentescoRepresentante.setText("Ingresar Parentesco Familiar");
        } else if (validarNombre(txtParentescoFamiliar.getText()) == false) {
            jlvalidarParentescoRepresentante.setText("Parentesco Familiar Incorrecto");
        } else {
            jlvalidarParentescoRepresentante.setText("");
        }

        if (txtCedulaRepresentante.getText().isEmpty() || txtApellidosRepresentante.getText().isEmpty()
                || txtNombreRepresentante.getText().isEmpty() || txtCorreoRepresentante.getText().isEmpty()
                || txtDireccionRepresentante.getText().isEmpty() || txtTelefonoRepresentante.getText().isEmpty()
                || txtParentescoFamiliar.getText().isEmpty()
                || jlvalidarCedulaRepresentante.getText().equals("Cédula Incorrecta")
                || jlvalidarNombreRepresentante.getText().equals("Nombre Incorrecto")
                || jlvalidarApellidoRepresentante.getText().equals("Apellido Incorrecto")
                || jlvalidarCorreoRepresentante.getText().equals("Correo invalido")
                || jlvalidarParentescoRepresentante.getText().equals("Parentesco Familiar Incorrecto")) {
            jbGuardarRepresentante.setEnabled(false);
        } else {
            jbGuardarRepresentante.setEnabled(true);
        }
    }

    void validarCamposModificarrRepresentante() {

        if (txtCedulaModificarRepresentante.getText().isEmpty()) {
            jlvalidarCedulaRepresentante1.setText("Ingresar Cédula");
        } else if (validadorDeCedula(txtCedulaModificarRepresentante.getText()) == false) {
            jlvalidarCedulaRepresentante1.setText("Cédula Incorrecta");
        } else {
            jlvalidarCedulaRepresentante1.setText("");
        }

        if (txtNombreModificarRepresentante.getText().isEmpty()) {
            jlvalidarNombreRepresentante1.setText("Ingresar Nombres");
        } else if (validarNombre(txtNombreModificarRepresentante.getText()) == false) {
            jlvalidarNombreRepresentante1.setText("Nombre Incorrecto");
        } else {
            jlvalidarNombreRepresentante1.setText("");
        }

        if (txtApellidosModificarRepresentante.getText().isEmpty()) {
            jlvalidarApellidoRepresentante1.setText("Ingresar Apellido");
        } else if (validarNombre(txtApellidosModificarRepresentante.getText()) == false) {
            jlvalidarApellidoRepresentante1.setText("Apellido Incorrecto");
        } else {
            jlvalidarApellidoRepresentante1.setText("");
        }

        if (txtDireccionModificarRepresentante.getText().isEmpty()) {
            jlvalidarDireccionRepresentante1.setText("Ingresar Dirección");
        } else {
            jlvalidarDireccionRepresentante1.setText("");
        }

        if (txtTelefonoModificarRepresentante.getText().isEmpty()) {
            jlvalidarTelefonoRepresentante1.setText("Ingresar Teléfono");
        } else {
            jlvalidarTelefonoRepresentante1.setText("");
        }

        if (txtCorreoModificarRepresentante.getText().isEmpty()) {
            jlvalidarCorreoRepresentante1.setText("Ingresar Correo");

        } else if (validarCorreo(txtCorreoModificarRepresentante.getText()) == false) {
            jlvalidarCorreoRepresentante1.setText("Correo invalido");
        } else {
            jlvalidarCorreoRepresentante1.setText("");
        }

        if (txtParentescoModificarRepresentante.getText().isEmpty()) {
            jlvalidarParentescoRepresentante1.setText("Ingresar Parentesco Familiar");
        } else if (validarNombre(txtParentescoModificarRepresentante.getText()) == false) {
            jlvalidarParentescoRepresentante1.setText("Parentesco Familiar Incorrecto");
        } else {
            jlvalidarParentescoRepresentante1.setText("");
        }

        if (txtCedulaModificarRepresentante.getText().isEmpty() || txtApellidosModificarRepresentante.getText().isEmpty()
                || txtNombreModificarRepresentante.getText().isEmpty() || txtCorreoModificarRepresentante.getText().isEmpty()
                || txtDireccionModificarRepresentante.getText().isEmpty() || txtTelefonoModificarRepresentante.getText().isEmpty()
                || txtParentescoModificarRepresentante.getText().isEmpty()
                || jlvalidarCedulaRepresentante1.getText().equals("Cédula Incorrecta")
                || jlvalidarNombreRepresentante1.getText().equals("Nombre Incorrecto")
                || jlvalidarApellidoRepresentante1.getText().equals("Apellido Incorrecto")
                || jlvalidarCorreoRepresentante1.getText().equals("Correo invalido")
                || jlvalidarParentescoRepresentante1.getText().equals("Parentesco Familiar Incorrecto")) {
            jbModificarRepresentante.setEnabled(false);
        } else {
            jbModificarRepresentante.setEnabled(true);
        }
    }

    static boolean validarNombre(String nombre) {
        return nombre.matches("^([A-Z]{1}[a-z]+[ ]*){1,2}$");
    }

    static boolean validarCorreo(String correo) {
        return correo.matches("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                + "[A-Za-z-]+(\\.[A-Za-z]+)*(\\.[A-Za-z]{2,})$");

    }
    void crearRepresentante(){
        Persona persona = new Persona(0, "", "", "", "", "", "") {
        };
        Docente docente = new Docente(0, "", persona, 0, "", "", "", "", "", "");
        Representante representante = new Representante(0, "", persona, 0, "", "", "", "", "", "");
        Estudiante estudiante = new Estudiante(0, ParseFecha("0/0/0"), 0, ParseFecha("0/0/0"), persona, representante, 0, "", "", "", "", "", "");
        ControladorRepresentante controladorRepresentante = new ControladorRepresentante();
        representante.setCodigoPersona(controladorRepresentante.buscarCodigoMaxRepresentante());
        representante.setCedula(txtCedulaRepresentante.getText());
        representante.setNombre(txtNombreRepresentante.getText());
        representante.setApellido(txtApellidosRepresentante.getText());
        representante.setDireccion(txtDireccionRepresentante.getText());
        representante.setTelefono(txtTelefonoRepresentante.getText());
        representante.setCorreo(txtCorreoRepresentante.getText());
        representante.setParentescoFamiliar(txtParentescoFamiliar.getText());
        representante.setPersona(representante);

        controladorRepresentante.crearUsuario(estudiante, docente, representante, persona);
        limpiarCrearRepresentante();
        validarCamposCrearRepresentante();
    }

    void buscarRepresentante() {
        Persona persona = new Persona(0, "", "", "", "", "", "") {
        };
        Representante representante = new Representante(0, "", persona, 0, "", "", "", "", "", "");
        representante = controladorRepresentante.buscarCedulaRepresentante(txtBuscarModificarRepresentante.getText());
        txtCedulaModificarRepresentante.setText(representante.getCedula());
        txtNombreModificarRepresentante.setText(representante.getNombre());
        txtApellidosModificarRepresentante.setText(representante.getApellido());
        txtDireccionModificarRepresentante.setText(representante.getDireccion());
        txtTelefonoModificarRepresentante.setText(representante.getTelefono());
        txtCorreoModificarRepresentante.setText(representante.getCorreo());
        txtParentescoModificarRepresentante.setText(representante.getParentescoFamiliar());
        aux = representante.getCedula();
        txtBuscarModificarRepresentante.setText("");
        validarCamposModificarrRepresentante();
    }

    void modificarRepresentante() {
        Persona persona = new Persona(0, "", "", "", "", "", "") {
        };
        Docente docente = new Docente(0, "", persona, 0, "", "", "", "", "", "");
        Representante representante = new Representante(0, "", persona, 0, "", "", "", "", "", "");
        Estudiante estudiante = new Estudiante(0, ParseFecha("0/0/0"), 0, ParseFecha("0/0/0"), persona, representante, 0, "", "", "", "", "", "");
        representante = controladorRepresentante.buscarCedulaRepresentante(aux);

        representante.setNombre(txtNombreModificarRepresentante.getText());
        representante.setApellido(txtApellidosModificarRepresentante.getText());
        representante.setDireccion(txtDireccionModificarRepresentante.getText());
        representante.setTelefono(txtTelefonoModificarRepresentante.getText());
        representante.setCorreo(txtCorreoModificarRepresentante.getText());
        representante.setParentescoFamiliar(txtParentescoModificarRepresentante.getText());
        representante.setCodigoPersona(representante.getCodigoPersona());
        representante.setCodigoRepresentante(representante.getCodigoRepresentante());
        representante.setPersona(representante);
        representante.setCedula(txtCedulaModificarRepresentante.getText());

        controladorRepresentante.modificarUsuario(estudiante, docente, representante, persona);
        limpiarModificarEliminarRepresentante();
    }

    void eliminarRepresentante() {
        Persona persona = new Persona(0, "", "", "", "", "", "") {
        };
        Docente docente = new Docente(0, "", persona, 0, "", "", "", "", "", "");
        Representante representante = new Representante(0, "", persona, 0, "", "", "", "", "", "");
        Estudiante estudiante = new Estudiante(0, ParseFecha("0/0/0"), 0, ParseFecha("0/0/0"), persona, representante, 0, "", "", "", "", "", "");
        representante = controladorRepresentante.buscarCedulaRepresentante(txtCedulaModificarRepresentante.getText());
        representante.setCodigoPersona(representante.getCodigoPersona());
        controladorRepresentante.eliminarUsuario(estudiante, docente, representante, persona);

        limpiarModificarEliminarRepresentante();

    }

    void limpiarModificarEliminarRepresentante() {
        txtBuscarModificarRepresentante.setText("");
        txtCedulaModificarRepresentante.setText("");
        txtNombreModificarRepresentante.setText("");
        txtApellidosModificarRepresentante.setText("");
        txtDireccionModificarRepresentante.setText("");
        txtTelefonoModificarRepresentante.setText("");
        txtCorreoModificarRepresentante.setText("");
        txtParentescoModificarRepresentante.setText("");
    }

    public boolean validadorDeCedula(String cedula) {
        boolean cedulaCorrecta = false;

        try {

            if (cedula.length() == 10) // ConstantesApp.LongitudCedula
            {
                int tercerDigito = Integer.parseInt(cedula.substring(2, 3));
                if (tercerDigito < 6) {
                    // Coeficientes de validación cédula
                    // El decimo digito se lo considera dígito verificador
                    int[] coefValCedula = {2, 1, 2, 1, 2, 1, 2, 1, 2};
                    int verificador = Integer.parseInt(cedula.substring(9, 10));
                    int suma = 0;
                    int digito = 0;
                    for (int i = 0; i < (cedula.length() - 1); i++) {
                        digito = Integer.parseInt(cedula.substring(i, i + 1)) * coefValCedula[i];
                        suma += ((digito % 10) + (digito / 10));
                    }

                    if ((suma % 10 == 0) && (suma % 10 == verificador)) {
                        cedulaCorrecta = true;
                    } else if ((10 - (suma % 10)) == verificador) {
                        cedulaCorrecta = true;
                    } else {
                        cedulaCorrecta = false;
                    }
                } else {
                    cedulaCorrecta = false;
                }
            } else {
                cedulaCorrecta = false;
            }
        } catch (NumberFormatException nfe) {
            cedulaCorrecta = false;
        } catch (Exception err) {
            /// System.out.println("Una excepcion ocurrio en el proceso de validadcion");
            cedulaCorrecta = false;
        }

        if (!cedulaCorrecta) {
            //System.out.println("La Cédula ingresada es Incorrecta");
        }
        return cedulaCorrecta;
    }

    public void centrar() {
        Dimension escritotioJdp = escritorioJdp.getSize();
        Dimension FrameSize = this.getSize();
        this.setLocation((escritotioJdp.width - FrameSize.width) / 2, (escritotioJdp.height - FrameSize.height) / 2);
    }

    void listarRepresentante() {
        DefaultTableModel modelo = (DefaultTableModel) tablaRegistrosJtbl.getModel();
        for (int i = 0; i < tablaRegistrosJtbl.getRowCount(); i++) {
            modelo.removeRow(i);
            i -= 1;
        }
        for (Representante representante : controladorRepresentante.listarUsuario()) {

            Object[] rowData = {representante.getCedula(), representante.getNombre(), representante.getApellido(),
                representante.getDireccion(), representante.getTelefono(), representante.getCorreo(), representante.getParentescoFamiliar()};
            modelo.addRow(rowData);
        }
        tablaRegistrosJtbl.setModel(modelo);
    }

}
