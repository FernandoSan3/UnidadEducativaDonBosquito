/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ec.com.donbosquito.vista.moduloFactura;

import edu.ec.com.donbosquito.controlador.moduloFactura.ControladorLibroDetalle;
import edu.ec.com.donbosquito.controlador.moduloFactura.ControladorLibroDiario;
import edu.ec.com.donbosquito.controlador.moduloFactura.ControladorPago;
import edu.ec.com.donbosquito.controlador.moduloFactura.ControladorTipoPago;
import edu.ec.com.donbosquito.controlador.moduloMatricula.ControladorFacturaCabecera;
import edu.ec.com.donbosquito.modelo.moduloFactura.LibroDetalle;
import edu.ec.com.donbosquito.modelo.moduloFactura.LibroDiario;
import edu.ec.com.donbosquito.modelo.moduloFactura.Pago;
import edu.ec.com.donbosquito.modelo.moduloFactura.TipoDePago;
import edu.ec.com.donbosquito.modelo.moduloMatricula.FacturaCabecera;
import edu.ec.com.donbosquito.vista.principal.Escritorio;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author alexCT
 */
public class VistaPago extends javax.swing.JInternalFrame {

    /**
     * Creates new form Pago
     */
    public VistaPago() {
        initComponents();
        llenarComboFactura();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCrear1 = new javax.swing.JPanel();
        lblEstadoCrear = new javax.swing.JLabel();
        lblValorCrear = new javax.swing.JLabel();
        cboxEstadoPago = new javax.swing.JComboBox<>();
        lblTipoPagoC = new javax.swing.JLabel();
        lblFactura = new javax.swing.JLabel();
        cboxFactura = new javax.swing.JComboBox<>();
        lblNombreTexto = new javax.swing.JLabel();
        btnGuardarTipoPago = new javax.swing.JButton();
        cboxTipPago = new javax.swing.JComboBox<>();
        btnAgregarPago = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnBuscarTipoPago = new javax.swing.JButton();
        lblPresentacion = new javax.swing.JLabel();
        lblValorTotal = new javax.swing.JLabel();
        lblValorCuotaTexto = new javax.swing.JLabel();
        txtValorPago = new javax.swing.JTextField();
        lblFormaPago = new javax.swing.JLabel();
        cboxFormaPago = new javax.swing.JComboBox<>();
        lblFecha = new javax.swing.JLabel();
        btnGuardarPAgo = new javax.swing.JButton();
        btnLibroDIario = new javax.swing.JButton();
        lblValorCuota = new javax.swing.JLabel();
        lblNumCuotas = new javax.swing.JLabel();
        lblValorTotalTexto = new javax.swing.JLabel();
        lblNumCuotasTexto = new javax.swing.JLabel();
        spinnerValorTotal = new javax.swing.JSpinner();
        btnCheckValor = new javax.swing.JButton();
        btnActualizarPago = new javax.swing.JButton();
        lblImagen = new javax.swing.JLabel();
        lblCuotasPorPagar = new javax.swing.JLabel();
        lblCuotasPorPagarTexto = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblQuedaPagarTexto = new javax.swing.JLabel();
        lblQuedaPagar = new javax.swing.JLabel();
        lblDatos = new javax.swing.JLabel();

        setClosable(true);
        setResizable(true);
        setTitle("PAGO");

        panelCrear1.setBackground(new java.awt.Color(255, 255, 255));
        panelCrear1.setLayout(null);

        lblEstadoCrear.setBackground(new java.awt.Color(0, 0, 0));
        lblEstadoCrear.setForeground(new java.awt.Color(0, 0, 153));
        lblEstadoCrear.setText("  Estado:");
        panelCrear1.add(lblEstadoCrear);
        lblEstadoCrear.setBounds(70, 270, 50, 16);

        lblValorCrear.setBackground(new java.awt.Color(0, 0, 0));
        lblValorCrear.setForeground(new java.awt.Color(0, 0, 153));
        lblValorCrear.setText("  Valor: ");
        panelCrear1.add(lblValorCrear);
        lblValorCrear.setBounds(80, 310, 50, 16);

        cboxEstadoPago.setBackground(new java.awt.Color(255, 255, 255));
        cboxEstadoPago.setForeground(new java.awt.Color(0, 0, 0));
        cboxEstadoPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elija una opcion...", "Pagado", "No Pagado" }));
        panelCrear1.add(cboxEstadoPago);
        cboxEstadoPago.setBounds(150, 260, 150, 30);

        lblTipoPagoC.setBackground(new java.awt.Color(51, 51, 51));
        lblTipoPagoC.setForeground(new java.awt.Color(0, 0, 153));
        lblTipoPagoC.setText("Tipo de Pago: ");
        panelCrear1.add(lblTipoPagoC);
        lblTipoPagoC.setBounds(40, 110, 90, 20);

        lblFactura.setBackground(new java.awt.Color(51, 51, 51));
        lblFactura.setForeground(new java.awt.Color(0, 0, 153));
        lblFactura.setText("Factura: ");
        panelCrear1.add(lblFactura);
        lblFactura.setBounds(70, 70, 50, 20);

        cboxFactura.setBackground(new java.awt.Color(255, 255, 255));
        cboxFactura.setForeground(new java.awt.Color(0, 0, 0));
        cboxFactura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elija una opcion..." }));
        cboxFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxFacturaActionPerformed(evt);
            }
        });
        panelCrear1.add(cboxFactura);
        cboxFactura.setBounds(150, 70, 150, 26);

        lblNombreTexto.setBackground(new java.awt.Color(51, 51, 51));
        lblNombreTexto.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblNombreTexto.setForeground(new java.awt.Color(102, 0, 0));
        panelCrear1.add(lblNombreTexto);
        lblNombreTexto.setBounds(470, 70, 210, 20);

        btnGuardarTipoPago.setBackground(new java.awt.Color(255, 255, 255));
        btnGuardarTipoPago.setForeground(new java.awt.Color(0, 0, 0));
        btnGuardarTipoPago.setText("Guardar");
        btnGuardarTipoPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarTipoPagoActionPerformed(evt);
            }
        });
        panelCrear1.add(btnGuardarTipoPago);
        btnGuardarTipoPago.setBounds(50, 160, 100, 40);

        cboxTipPago.setBackground(new java.awt.Color(255, 255, 255));
        cboxTipPago.setForeground(new java.awt.Color(0, 0, 0));
        cboxTipPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elija una opcion...", "Cuotas", "Pago Total" }));
        cboxTipPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxTipPagoActionPerformed(evt);
            }
        });
        panelCrear1.add(cboxTipPago);
        cboxTipPago.setBounds(150, 110, 150, 26);

        btnAgregarPago.setBackground(new java.awt.Color(255, 255, 255));
        btnAgregarPago.setForeground(new java.awt.Color(0, 0, 0));
        btnAgregarPago.setText("Pagar Cuota");
        btnAgregarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarPagoActionPerformed(evt);
            }
        });
        panelCrear1.add(btnAgregarPago);
        btnAgregarPago.setBounds(250, 160, 100, 40);

        btnLimpiar.setBackground(new java.awt.Color(255, 255, 255));
        btnLimpiar.setForeground(new java.awt.Color(0, 0, 0));
        btnLimpiar.setIcon(new javax.swing.ImageIcon("C:\\Users\\alexC\\Desktop\\nuevo.png")); // NOI18N
        btnLimpiar.setText("Nuevo");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        panelCrear1.add(btnLimpiar);
        btnLimpiar.setBounds(430, 240, 110, 40);

        btnBuscarTipoPago.setBackground(new java.awt.Color(255, 255, 255));
        btnBuscarTipoPago.setForeground(new java.awt.Color(0, 0, 0));
        btnBuscarTipoPago.setText("Buscar");
        btnBuscarTipoPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarTipoPagoActionPerformed(evt);
            }
        });
        panelCrear1.add(btnBuscarTipoPago);
        btnBuscarTipoPago.setBounds(150, 160, 100, 40);

        lblPresentacion.setBackground(new java.awt.Color(51, 51, 51));
        lblPresentacion.setForeground(new java.awt.Color(0, 51, 153));
        lblPresentacion.setText("A nombre de: ");
        panelCrear1.add(lblPresentacion);
        lblPresentacion.setBounds(380, 70, 80, 20);

        lblValorTotal.setBackground(new java.awt.Color(51, 51, 51));
        lblValorTotal.setForeground(new java.awt.Color(0, 51, 153));
        lblValorTotal.setText("    Valor Total: ");
        panelCrear1.add(lblValorTotal);
        lblValorTotal.setBounds(380, 110, 80, 20);

        lblValorCuotaTexto.setBackground(new java.awt.Color(51, 51, 51));
        lblValorCuotaTexto.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        lblValorCuotaTexto.setForeground(new java.awt.Color(0, 0, 0));
        panelCrear1.add(lblValorCuotaTexto);
        lblValorCuotaTexto.setBounds(470, 190, 70, 20);

        txtValorPago.setBackground(new java.awt.Color(51, 51, 51));
        txtValorPago.setForeground(new java.awt.Color(255, 255, 255));
        txtValorPago.setEnabled(false);
        panelCrear1.add(txtValorPago);
        txtValorPago.setBounds(150, 300, 70, 30);

        lblFormaPago.setBackground(new java.awt.Color(51, 51, 51));
        lblFormaPago.setForeground(new java.awt.Color(0, 0, 153));
        lblFormaPago.setText("Forma de Pago: ");
        panelCrear1.add(lblFormaPago);
        lblFormaPago.setBounds(30, 230, 100, 16);

        cboxFormaPago.setBackground(new java.awt.Color(255, 255, 255));
        cboxFormaPago.setForeground(new java.awt.Color(0, 0, 0));
        cboxFormaPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elija una opcion...", "Efectivo", "Tarjeta" }));
        panelCrear1.add(cboxFormaPago);
        cboxFormaPago.setBounds(150, 220, 150, 26);

        lblFecha.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N
        lblFecha.setForeground(new java.awt.Color(102, 0, 0));
        panelCrear1.add(lblFecha);
        lblFecha.setBounds(40, 30, 150, 30);

        btnGuardarPAgo.setBackground(new java.awt.Color(255, 255, 255));
        btnGuardarPAgo.setForeground(new java.awt.Color(0, 0, 0));
        btnGuardarPAgo.setText("Guardar");
        btnGuardarPAgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarPAgoActionPerformed(evt);
            }
        });
        panelCrear1.add(btnGuardarPAgo);
        btnGuardarPAgo.setBounds(100, 360, 100, 40);

        btnLibroDIario.setBackground(new java.awt.Color(255, 255, 255));
        btnLibroDIario.setForeground(new java.awt.Color(0, 0, 0));
        btnLibroDIario.setIcon(new javax.swing.ImageIcon("C:\\Users\\alexC\\Desktop\\list_64px.png")); // NOI18N
        btnLibroDIario.setText("Libro Diario");
        btnLibroDIario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLibroDIarioActionPerformed(evt);
            }
        });
        panelCrear1.add(btnLibroDIario);
        btnLibroDIario.setBounds(550, 240, 140, 40);

        lblValorCuota.setBackground(new java.awt.Color(51, 51, 51));
        lblValorCuota.setForeground(new java.awt.Color(0, 51, 153));
        lblValorCuota.setText(" Valor de Cuota:");
        panelCrear1.add(lblValorCuota);
        lblValorCuota.setBounds(370, 190, 90, 16);

        lblNumCuotas.setBackground(new java.awt.Color(51, 51, 51));
        lblNumCuotas.setForeground(new java.awt.Color(0, 51, 153));
        lblNumCuotas.setText("N. Cuotas:");
        panelCrear1.add(lblNumCuotas);
        lblNumCuotas.setBounds(400, 150, 60, 16);

        lblValorTotalTexto.setBackground(new java.awt.Color(51, 51, 51));
        lblValorTotalTexto.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        lblValorTotalTexto.setForeground(new java.awt.Color(0, 0, 0));
        panelCrear1.add(lblValorTotalTexto);
        lblValorTotalTexto.setBounds(470, 110, 210, 20);

        lblNumCuotasTexto.setBackground(new java.awt.Color(51, 51, 51));
        lblNumCuotasTexto.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        lblNumCuotasTexto.setForeground(new java.awt.Color(0, 0, 0));
        panelCrear1.add(lblNumCuotasTexto);
        lblNumCuotasTexto.setBounds(470, 150, 40, 20);
        panelCrear1.add(spinnerValorTotal);
        spinnerValorTotal.setBounds(230, 300, 50, 30);

        btnCheckValor.setBackground(new java.awt.Color(255, 255, 255));
        btnCheckValor.setForeground(new java.awt.Color(255, 255, 255));
        btnCheckValor.setIcon(new javax.swing.ImageIcon("C:\\Users\\alexC\\Desktop\\Captura.PNG")); // NOI18N
        btnCheckValor.setContentAreaFilled(false);
        btnCheckValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckValorActionPerformed(evt);
            }
        });
        panelCrear1.add(btnCheckValor);
        btnCheckValor.setBounds(280, 300, 30, 30);

        btnActualizarPago.setBackground(new java.awt.Color(255, 255, 255));
        btnActualizarPago.setForeground(new java.awt.Color(0, 0, 0));
        btnActualizarPago.setText("Actualizar");
        btnActualizarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarPagoActionPerformed(evt);
            }
        });
        panelCrear1.add(btnActualizarPago);
        btnActualizarPago.setBounds(200, 360, 100, 40);

        lblImagen.setIcon(new javax.swing.ImageIcon("C:\\Users\\alexC\\Documents\\Trabajos Netbeans\\Factura\\src\\ec\\edu\\ups\\imagenes\\WhatsApp Image 2020-07-12 at 11.11.20 PM.jpeg")); // NOI18N
        panelCrear1.add(lblImagen);
        lblImagen.setBounds(390, 280, 330, 130);

        lblCuotasPorPagar.setBackground(new java.awt.Color(51, 51, 51));
        lblCuotasPorPagar.setForeground(new java.awt.Color(0, 51, 153));
        lblCuotasPorPagar.setText(" Cuotas por Pagar:");
        panelCrear1.add(lblCuotasPorPagar);
        lblCuotasPorPagar.setBounds(540, 150, 110, 16);

        lblCuotasPorPagarTexto.setBackground(new java.awt.Color(51, 51, 51));
        lblCuotasPorPagarTexto.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        lblCuotasPorPagarTexto.setForeground(new java.awt.Color(0, 0, 0));
        panelCrear1.add(lblCuotasPorPagarTexto);
        lblCuotasPorPagarTexto.setBounds(660, 150, 40, 20);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("N. Cuotas");
        panelCrear1.add(jLabel1);
        jLabel1.setBounds(230, 330, 40, 10);

        lblQuedaPagarTexto.setBackground(new java.awt.Color(51, 51, 51));
        lblQuedaPagarTexto.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        lblQuedaPagarTexto.setForeground(new java.awt.Color(0, 0, 0));
        panelCrear1.add(lblQuedaPagarTexto);
        lblQuedaPagarTexto.setBounds(660, 190, 70, 20);

        lblQuedaPagar.setBackground(new java.awt.Color(51, 51, 51));
        lblQuedaPagar.setForeground(new java.awt.Color(0, 51, 153));
        lblQuedaPagar.setText(" Queda por Pagar:");
        panelCrear1.add(lblQuedaPagar);
        lblQuedaPagar.setBounds(540, 190, 110, 16);

        lblDatos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        panelCrear1.add(lblDatos);
        lblDatos.setBounds(360, 40, 380, 190);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelCrear1, javax.swing.GroupLayout.DEFAULT_SIZE, 757, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelCrear1, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboxFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxFacturaActionPerformed
        // TODO add your handling code here:
        llenarLabel();
    }//GEN-LAST:event_cboxFacturaActionPerformed

    private void btnGuardarTipoPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarTipoPagoActionPerformed
        // TODO add your handling code here:
        agregarTipoPago();
    }//GEN-LAST:event_btnGuardarTipoPagoActionPerformed

    private void cboxTipPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxTipPagoActionPerformed

    }//GEN-LAST:event_cboxTipPagoActionPerformed

    private void btnAgregarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPagoActionPerformed
        // TODO add your handling code here:
        pagarCuota();
    }//GEN-LAST:event_btnAgregarPagoActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        nuevo();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnBuscarTipoPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarTipoPagoActionPerformed
        // TODO add your handling code here:
        buscarTipoPago();
    }//GEN-LAST:event_btnBuscarTipoPagoActionPerformed

    private void btnCheckValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckValorActionPerformed
        // TODO add your handling code here:
        agregarValorSpinner();
    }//GEN-LAST:event_btnCheckValorActionPerformed

    private void btnGuardarPAgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarPAgoActionPerformed
        // TODO add your handling code here:
        nuevoPago();
    }//GEN-LAST:event_btnGuardarPAgoActionPerformed

    private void btnLibroDIarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLibroDIarioActionPerformed
        // TODO add your handling code here:
        VistaLibroDiario vistaLDiario = new VistaLibroDiario();
        Escritorio.escritorioJdp.add(vistaLDiario);
        vistaLDiario.toFront();
        vistaLDiario.setVisible(true);

    }//GEN-LAST:event_btnLibroDIarioActionPerformed

    private void btnActualizarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarPagoActionPerformed
        // TODO add your handling code here:
        actualizarEstadoPago();
    }//GEN-LAST:event_btnActualizarPagoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarPago;
    private javax.swing.JButton btnAgregarPago;
    private javax.swing.JButton btnBuscarTipoPago;
    private javax.swing.JButton btnCheckValor;
    private javax.swing.JButton btnGuardarPAgo;
    private javax.swing.JButton btnGuardarTipoPago;
    private javax.swing.JButton btnLibroDIario;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox<String> cboxEstadoPago;
    private javax.swing.JComboBox<String> cboxFactura;
    private javax.swing.JComboBox<String> cboxFormaPago;
    private javax.swing.JComboBox<String> cboxTipPago;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblCuotasPorPagar;
    private javax.swing.JLabel lblCuotasPorPagarTexto;
    private javax.swing.JLabel lblDatos;
    private javax.swing.JLabel lblEstadoCrear;
    private javax.swing.JLabel lblFactura;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblFormaPago;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JLabel lblNombreTexto;
    private javax.swing.JLabel lblNumCuotas;
    private javax.swing.JLabel lblNumCuotasTexto;
    private javax.swing.JLabel lblPresentacion;
    private javax.swing.JLabel lblQuedaPagar;
    private javax.swing.JLabel lblQuedaPagarTexto;
    private javax.swing.JLabel lblTipoPagoC;
    private javax.swing.JLabel lblValorCrear;
    private javax.swing.JLabel lblValorCuota;
    private javax.swing.JLabel lblValorCuotaTexto;
    private javax.swing.JLabel lblValorTotal;
    private javax.swing.JLabel lblValorTotalTexto;
    private javax.swing.JPanel panelCrear1;
    private javax.swing.JSpinner spinnerValorTotal;
    private javax.swing.JTextField txtValorPago;
    // End of variables declaration//GEN-END:variables

    void obtenerFecha() {
        Date fecha = new Date();
        String s = new SimpleDateFormat("dd/MM/YYYY").format(fecha);
        lblFecha.setText(s);
    }

    void llenarComboFactura() {
        ArrayList<String> lista = new ArrayList<>();
        ControladorTipoPago controlTipPago = new ControladorTipoPago();
        lista = controlTipPago.buscarNumFactura();
        for (int i = 0; i < lista.size(); i++) {
            cboxFactura.addItem(lista.get(i));
        }
        obtenerFecha();
        lblPresentacion.setVisible(false);
        lblValorTotal.setVisible(false);
        lblNombreTexto.setVisible(false);
        btnLimpiar.setEnabled(false);
        btnAgregarPago.setEnabled(false);
        lblNumCuotas.setVisible(false);
        lblValorCuota.setVisible(false);
        lblFecha.setVisible(true);
        cboxFormaPago.setEnabled(false);
        cboxEstadoPago.setEnabled(false);
        spinnerValorTotal.setEnabled(false);
        btnCheckValor.setEnabled(false);
        btnGuardarPAgo.setEnabled(false);
        btnActualizarPago.setEnabled(false);
        btnActualizarPago.setVisible(true);
        SpinnerNumberModel spinner = new SpinnerNumberModel();
        spinner.setValue(1);
        spinnerValorTotal.setModel(spinner);
        lblCuotasPorPagar.setVisible(false);
        lblCuotasPorPagarTexto.setVisible(false);
        lblQuedaPagar.setVisible(false);
        lblQuedaPagarTexto.setVisible(false);
    }

    void agregarTipoPago() {
        if (cboxTipPago.getSelectedItem() == "Elija una opcion..." || cboxFactura.getSelectedItem() == "Elija una opcion...") {
            JOptionPane.showMessageDialog(this, "Llene todos los campos!");
        } else {
            TipoDePago tipPago = new TipoDePago();
            ControladorFacturaCabecera contFacCab = new ControladorFacturaCabecera();
            ControladorTipoPago controlTipoPago = new ControladorTipoPago();
            FacturaCabecera facturaCab = new FacturaCabecera();
            String valorCombo = (String) cboxFactura.getSelectedItem();
            int codigo = 0;
            facturaCab = contFacCab.buscarPorNumFactura(valorCombo);
            codigo = facturaCab.getCodigo();
            if (controlTipoPago.buscarCodigoFactura(valorCombo) == codigo) {
                JOptionPane.showMessageDialog(this, "Ya se agrego la factura!!");
                nuevo();
            } else {
                tipPago.setCodigo(controlTipoPago.buscarCodigo());
                tipPago.setTipoPago((String) cboxTipPago.getSelectedItem());
                if (cboxTipPago.getSelectedItem().equals("Pago Total")) {
                    tipPago.setNumeroPago(1);
                } else if (cboxTipPago.getSelectedItem().equals("Cuotas")) {
                    tipPago.setNumeroPago(10);
                }
                tipPago.setFacturaCabecera(contFacCab.buscarPorNumFactura((String) cboxFactura.getSelectedItem()));
                controlTipoPago.crearTipoPago(tipPago);
                calcularValorTipoPago();
                btnAgregarPago.setEnabled(true);
                btnBuscarTipoPago.setEnabled(false);
                btnGuardarTipoPago.setEnabled(false);
                btnLimpiar.setEnabled(true);
                cboxFactura.setEnabled(false);
                cboxTipPago.setEnabled(false);
            }
        }
    }

    void llenarLabel() {
        ControladorTipoPago controlTipPago = new ControladorTipoPago();
        ControladorFacturaCabecera controlFacturaCabecera = new ControladorFacturaCabecera();
        FacturaCabecera facturaCabecera = new FacturaCabecera();
        DecimalFormat decimales = new DecimalFormat("#.00");
        if (cboxFactura.getSelectedItem() == "Elija una opcion...") {
            lblNombreTexto.setVisible(false);
            lblValorTotal.setVisible(false);
            lblPresentacion.setVisible(false);
        } else {
            lblNombreTexto.setVisible(true);
            lblPresentacion.setVisible(true);
            lblNombreTexto.setText(controlTipPago.buscarRepresentantePago((String) cboxFactura.getSelectedItem()));
            facturaCabecera = controlFacturaCabecera.buscarPorNumFactura((String) cboxFactura.getSelectedItem());
            double total = facturaCabecera.getTotal();
            lblValorTotal.setVisible(true);
            lblValorTotalTexto.setText(String.valueOf(decimales.format(total).replace(",", ".")));
            lblValorTotalTexto.setVisible(true);
        }
    }

    void buscarTipoPago() {
        ControladorTipoPago controlTipoPago = new ControladorTipoPago();
        TipoDePago tipoPago = new TipoDePago();
        String valorCombo = (String) cboxFactura.getSelectedItem();
        tipoPago = controlTipoPago.buscarPorFactura(valorCombo);
        FacturaCabecera fc = new FacturaCabecera();

        if (cboxFactura.getSelectedItem().equals("Elija una opcion...")) {
            JOptionPane.showMessageDialog(this, "Escoja una factura!");
            nuevo();
        } else {
            if (controlTipoPago.buscarCodigoFactura(valorCombo) == fc.getCodigo()) {
                JOptionPane.showMessageDialog(this, "Tipo de pago no encontrado a la factura " + cboxFactura.getSelectedItem() + ", cree uno!");
                nuevo();
            } else {

                cboxTipPago.setSelectedItem((String) tipoPago.getTipoPago());
                cboxFactura.setEnabled(false);
                cboxTipPago.setEnabled(false);
                btnBuscarTipoPago.setEnabled(false);
                btnGuardarTipoPago.setEnabled(false);
                btnBuscarTipoPago.setEnabled(false);
                btnAgregarPago.setEnabled(true);
                btnLimpiar.setEnabled(true);
                lblPresentacion.setVisible(true);
                lblValorTotal.setVisible(true);
                calcularValorTipoPago();
            }
        }
    }

    void nuevo() {
        cboxFactura.setSelectedItem("Elija una opcion...");
        cboxTipPago.setSelectedItem("Elija una opcion...");
        cboxEstadoPago.setSelectedItem("Elija una opcion...");
        cboxFormaPago.setSelectedItem("Elija una opcion...");
        btnGuardarTipoPago.setEnabled(true);
        btnBuscarTipoPago.setEnabled(true);
        cboxFactura.setEnabled(true);
        cboxTipPago.setEnabled(true);
        cboxEstadoPago.setEnabled(false);
        lblPresentacion.setVisible(false);
        lblValorTotal.setVisible(false);
        lblNombreTexto.setVisible(false);
        btnAgregarPago.setEnabled(false);
        btnLimpiar.setEnabled(false);
        lblValorCuotaTexto.setVisible(false);
        cboxFormaPago.setEnabled(false);
        lblNumCuotas.setVisible(false);
        lblValorCuota.setVisible(false);
        lblNumCuotasTexto.setVisible(false);
        lblValorTotalTexto.setVisible(false);
        txtValorPago.setText("");
        SpinnerNumberModel spinner = new SpinnerNumberModel();
        spinner.setValue(1);
        spinnerValorTotal.setModel(spinner);
        btnGuardarPAgo.setEnabled(false);
        spinnerValorTotal.setEnabled(false);
        btnCheckValor.setEnabled(false);
        lblCuotasPorPagar.setVisible(false);
        lblCuotasPorPagarTexto.setVisible(false);
        lblQuedaPagar.setVisible(false);
        lblQuedaPagarTexto.setVisible(false);
        btnActualizarPago.setEnabled(false);
        btnActualizarPago.setVisible(true);
    }

    void pagarCuota() {
        SpinnerNumberModel spinner = new SpinnerNumberModel();
        ControladorPago controlPago = new ControladorPago();
        Pago pago = new Pago();
        DecimalFormat decimales = new DecimalFormat("#.00");
        if (cboxTipPago.getSelectedItem().equals("Pago Total")) {
            System.out.println("pago  totaaaaal");
            spinner.setMaximum(1);
            spinner.setValue(1);
            spinnerValorTotal.setModel(spinner);
            spinnerValorTotal.setEnabled(false);
            String estadoNoPagado = controlPago.buscarEstado((String) cboxFactura.getSelectedItem(), "No Pagado");
            if (estadoNoPagado.equals("No Pagado")) {
                int opcion = JOptionPane.showConfirmDialog(this, "Tiene un pago sin cancelar, desea actualizarlo?");
                if (opcion == JOptionPane.YES_OPTION) {
                    pago = controlPago.buscarEstadoPorPago((String) cboxFactura.getSelectedItem(), "No Pagado");
                    cboxFormaPago.setSelectedItem(pago.getFormaPago());
                    cboxEstadoPago.setSelectedItem(pago.getEstado());
                    txtValorPago.setText(String.valueOf(decimales.format(pago.getValor()).replace(",", ".")));
                    cboxEstadoPago.setEnabled(true);
                    btnCheckValor.setEnabled(false);
                    spinnerValorTotal.setEnabled(false);
                    cboxFormaPago.setEnabled(false);
                    btnGuardarPAgo.setEnabled(false);
                    btnAgregarPago.setEnabled(false);
                    btnActualizarPago.setEnabled(true);
                } 

            } else if (estadoNoPagado.equals("Pagado") || estadoNoPagado.equals("")) {
                cboxEstadoPago.setEnabled(true);
                cboxFormaPago.setEnabled(true);
                txtValorPago.setText(lblValorCuotaTexto.getText());
                btnCheckValor.setEnabled(false);
                spinnerValorTotal.setEnabled(false);
                spinnerValorTotal.setVisible(true);
                btnCheckValor.setVisible(true);
                cboxFormaPago.setEnabled(true);
                cboxEstadoPago.setEnabled(true);
                btnGuardarPAgo.setEnabled(true);
                btnAgregarPago.setEnabled(false);
            }
        } else if (cboxTipPago.getSelectedItem().equals("Cuotas")) {
            spinner.setMinimum(1);
            int valor = Integer.parseInt(lblCuotasPorPagarTexto.getText());
            spinner.setMaximum(valor);
            spinner.setValue(1);
            spinnerValorTotal.setModel(spinner);
            String estadoNoPagado = controlPago.buscarEstado((String) cboxFactura.getSelectedItem(), "No Pagado");
            if (estadoNoPagado.equals("No Pagado")) {
                int opcion = JOptionPane.showConfirmDialog(this, "Tiene un pago sin cancelar, desea actualizarlo?");
                if (opcion == JOptionPane.YES_OPTION) {
                    pago = controlPago.buscarEstadoPorPago((String) cboxFactura.getSelectedItem(), "No Pagado");
                    cboxFormaPago.setSelectedItem(pago.getFormaPago());
                    cboxEstadoPago.setSelectedItem(pago.getEstado());
                    txtValorPago.setText(String.valueOf(decimales.format(pago.getValor()).replace(",", ".")));
                    btnCheckValor.setVisible(false);
                    cboxEstadoPago.setEnabled(true);
                    btnCheckValor.setEnabled(false);
                    spinnerValorTotal.setEnabled(false);
                    double cuota = Double.parseDouble(lblValorCuotaTexto.getText());
                    double valorPago = pago.getValor();
                    int valorCuota = (int) (valorPago / cuota);
                    spinner.setValue(valorCuota);
                    spinnerValorTotal.setModel(spinner);
                    cboxFormaPago.setEnabled(false);
                    btnGuardarPAgo.setEnabled(false);
                    btnAgregarPago.setEnabled(false);
                    btnActualizarPago.setEnabled(true);
                }
            } else if (estadoNoPagado.equals("Pagado") || estadoNoPagado.equals("")) {
                cboxEstadoPago.setEnabled(true);
                cboxFormaPago.setEnabled(true);
                btnCheckValor.setEnabled(true);
                spinnerValorTotal.setEnabled(true);
                spinnerValorTotal.setVisible(true);
                btnCheckValor.setVisible(true);
                cboxFormaPago.setEnabled(true);
                cboxEstadoPago.setEnabled(true);
                btnGuardarPAgo.setEnabled(true);
                btnAgregarPago.setEnabled(false);
                btnActualizarPago.setEnabled(false);
            }
        }
    }

    void agregarValorSpinner() {
        double valor = Double.parseDouble(lblValorCuotaTexto.getText());
        double resultado = 0;
        DecimalFormat decimales = new DecimalFormat("#.00");
        int numero = (int) spinnerValorTotal.getValue();
        switch (numero) {
            case 1:
                txtValorPago.setText(lblValorCuotaTexto.getText());
                break;
            case 2:
                resultado = valor * 2;
                txtValorPago.setText(String.valueOf(decimales.format(resultado).replace(",", ".")));
                break;
            case 3:
                resultado = valor * 3;
                txtValorPago.setText(String.valueOf(decimales.format(resultado).replace(",", ".")));
                break;
            case 4:
                resultado = valor * 4;
                txtValorPago.setText(String.valueOf(decimales.format(resultado).replace(",", ".")));
                break;
            case 5:
                resultado = valor * 5;
                txtValorPago.setText(String.valueOf(decimales.format(resultado).replace(",", ".")));
                break;
            case 6:
                resultado = valor * 6;
                txtValorPago.setText(String.valueOf(decimales.format(resultado).replace(",", ".")));
                break;
            case 7:
                resultado = valor * 7;
                txtValorPago.setText(String.valueOf(decimales.format(resultado).replace(",", ".")));
                break;
            case 8:
                resultado = valor * 8;
                txtValorPago.setText(String.valueOf(decimales.format(resultado).replace(",", ".")));
                break;
            case 9:
                resultado = valor * 9;
                txtValorPago.setText(String.valueOf(decimales.format(resultado).replace(",", ".")));
                break;
            case 10:
                resultado = valor * 10;
                txtValorPago.setText(String.valueOf(decimales.format(resultado).replace(",", ".")));
                break;
        }
    }

    void nuevoPago() {
        Pago pago = new Pago();
        ControladorPago controlPago = new ControladorPago();
        ControladorTipoPago controlTipoPago = new ControladorTipoPago();
        TipoDePago tipPago = new TipoDePago();
        if (cboxFormaPago.getSelectedItem().equals("Elija una opcion...") || cboxEstadoPago.getSelectedItem().equals("Elija una opcion...")
                || txtValorPago.getText() == "") {
            JOptionPane.showMessageDialog(this, "Llene todos los campos!!");
        } else {

            pago.setCodigo(controlPago.buscarCodigo());
            pago.setFecha((convertirFecha(lblFecha.getText())));
            pago.setEstado((String) cboxEstadoPago.getSelectedItem());
            pago.setValor(Double.parseDouble(String.valueOf(txtValorPago.getText())));
            pago.setFormaPago(String.valueOf(cboxFormaPago.getSelectedItem()));
            tipPago = controlTipoPago.buscarPorFactura((String) cboxFactura.getSelectedItem());
            pago.setTipoPago(tipPago);
            controlPago.crearPago(pago);
            JOptionPane.showMessageDialog(this, "Pago creado!!");
            if (cboxEstadoPago.getSelectedItem().equals("No Pagado")) {
                nuevo();
            } else {
                crearLibroDetalle();
                nuevo();
            }
        }

    }

    void actualizarEstadoPago() {
        ControladorPago controlPago = new ControladorPago();
        Pago pago = new Pago();
        pago = controlPago.buscarPorFactura((String) cboxFactura.getSelectedItem());
        pago.setFecha((convertirFecha(lblFecha.getText())));
        pago.setEstado((String) cboxEstadoPago.getSelectedItem());
        if (cboxEstadoPago.getSelectedItem().equals("No Pagado")) {
            JOptionPane.showMessageDialog(this, "Estado no actualizado!!");
        } else {
            controlPago.actualizarPago(pago);
            JOptionPane.showMessageDialog(this, "Pago Actualizado!!");
            crearLibroDetalle();
            nuevo();
        }
    }

    void crearLibroDetalle() {
        String detalle1 = "Pago total de " + txtValorPago.getText() + " mediante " + cboxFormaPago.getSelectedItem() + " de la factura " + cboxFactura.getSelectedItem();
        String detalle2 = "Pago de " + spinnerValorTotal.getValue() + " cuota/s con valor de " + txtValorPago.getText() + " mediante " + cboxFormaPago.getSelectedItem() + " de la factura " + cboxFactura.getSelectedItem();
        ControladorPago controlPago = new ControladorPago();
        Pago pago = new Pago();
        ControladorLibroDetalle controlLibroDetalle = new ControladorLibroDetalle();
        ControladorLibroDiario controlLibroDIario = new ControladorLibroDiario();
        LibroDiario libroDiario = new LibroDiario();
        LibroDetalle libroDetalle = new LibroDetalle();
        libroDetalle.setCodigo(controlLibroDetalle.buscarCodigo());
        libroDetalle.setFecha(convertirFecha(lblFecha.getText()));
        if (cboxTipPago.getSelectedItem().equals("Pago Total")) {
            libroDetalle.setDetalle(detalle1);
        } else if (cboxTipPago.getSelectedItem().equals("Cuotas")) {
            libroDetalle.setDetalle(detalle2);
        }
        libroDetalle.setDebe(Double.parseDouble(txtValorPago.getText()));
        libroDetalle.setHaber(Double.parseDouble(txtValorPago.getText()));
        libroDiario = controlLibroDIario.buscarLibroDia(1);
        libroDetalle.setLibroDiario(libroDiario);
        pago = controlPago.buscarPago(controlPago.buscarCodigoPago());
        libroDetalle.setPago(pago);
        controlLibroDetalle.crearLibroDetalle(libroDetalle);
    }

    Date convertirFecha(String texto) {
        try {
            Date fechaDate = new SimpleDateFormat("dd/MM/yyyy").parse(texto);
            return fechaDate;
        } catch (ParseException ex) {
            System.out.println(ex);
        }
        return null;
    }

    void calcularValorTipoPago() {
        ControladorTipoPago controlTipoPago = new ControladorTipoPago();
        TipoDePago tipoPago = new TipoDePago();
        ControladorPago controlPago = new ControladorPago();
        String valorCombo = (String) cboxFactura.getSelectedItem();
        tipoPago = controlTipoPago.buscarPorFactura(valorCombo);
        DecimalFormat decimales = new DecimalFormat("#.00");
        double total = tipoPago.getFacturaCabecera().getTotal();
        lblValorTotalTexto.setText(String.valueOf(decimales.format(total).replace(",", ".")));
        lblValorTotalTexto.setVisible(true);
        lblValorCuotaTexto.setVisible(true);
        lblValorTotal.setVisible(true);
        lblNumCuotas.setVisible(true);
        lblValorCuota.setVisible(true);
        lblNumCuotasTexto.setVisible(true);
        lblNumCuotasTexto.setText(String.valueOf(tipoPago.getNumeroPago()));
        lblCuotasPorPagar.setVisible(true);
        lblCuotasPorPagarTexto.setVisible(true);
        lblQuedaPagar.setVisible(true);
        lblQuedaPagarTexto.setVisible(true);
        if (cboxTipPago.getSelectedItem().equals("Pago Total")) {

            if (controlPago.buscarEstadoPago(String.valueOf(cboxFactura.getSelectedItem())).equals("Pagado")) {
                lblValorTotalTexto.setText(String.valueOf(decimales.format(total).replace(",", ".")) + " Pagado!! ");
                lblValorCuotaTexto.setText(String.valueOf(decimales.format(total).replace(",", ".")));
                btnAgregarPago.setEnabled(false);
                lblCuotasPorPagarTexto.setText("0");
                lblQuedaPagarTexto.setText("0.00");
            } else {
                lblValorCuotaTexto.setText(String.valueOf(decimales.format(total).replace(",", ".")));
                lblCuotasPorPagarTexto.setText("1");
                btnAgregarPago.setEnabled(true);
                lblQuedaPagarTexto.setText(lblValorTotalTexto.getText());
            }
        } else if (cboxTipPago.getSelectedItem().equals("Cuotas")) {
            ArrayList<String> lista = new ArrayList<>();
            ControladorLibroDetalle controlLibroDetalle = new ControladorLibroDetalle();
            lista = controlLibroDetalle.buscarDebePorFactura((String) cboxFactura.getSelectedItem());
            double suma = 0;
            double cuota = total / 10;
            for (int i = 0; i < lista.size(); i++) {
                suma += Double.parseDouble(lista.get(i));
            }
            if (suma == total) {
                lblValorTotalTexto.setText(String.valueOf(decimales.format(total).replace(",", ".")) + " Pagado!! ");
                btnAgregarPago.setEnabled(false);
                lblValorCuotaTexto.setText(String.valueOf(decimales.format(cuota).replace(",", ".")));
                lblCuotasPorPagar.setVisible(true);
                lblCuotasPorPagarTexto.setText("0");
                lblQuedaPagarTexto.setText("0.00");
            } else {
                lblValorCuotaTexto.setText(String.valueOf(decimales.format(cuota).replace(",", ".")));
                double quedaPorPagar = total - suma;
                int cuotasPorPagar = (int) (quedaPorPagar / cuota);
                lblCuotasPorPagarTexto.setText(String.valueOf(cuotasPorPagar));
                lblQuedaPagarTexto.setText(String.valueOf(decimales.format(quedaPorPagar).replace(",", ".")));
                btnAgregarPago.setEnabled(true);
            }

        }
    }
}
